"""RF wave fields.

The RF wave fields are used to store the 2D electromagnetic wave fields
generated by codes like TORIC. These fields are defined by their complex 
fields, E_R = Re(E_R) + i*Im(E_R) and have a phase dependence on the toroidal
mode number and the angular frequency in time.

This implementation follows the publication by:
G. Kramer et al, "A description of the full-particle-orbit
following SPIRAL code for simulating fast-ion experiments in tokamaks",
Plasma Phys. Control. Fusion 55 (2013) 025013

in Equation (20).
"""
import h5py
import numpy as np

from .coreio.fileapi import add_group
from .coreio.treedata import DataGroup

class RFWaveFields(DataGroup):
    """Electromagnetic wave fields generated by the TORIC code.
    """

    def read(self):
        """Read data from HDF5 file.

        Returns
        -------
        data : dict
            Data read from HDF5 stored in the same format as is passed to
            :meth:`write_hdf5`.
        """
        fn   = self._root._ascot.file_getpath()
        path = self._path

        out = {}
        with h5py.File(fn,"r") as f:
            for key in f[path]:
                out[key] = f[path][key][:]

        return out
    
    @staticmethod
    def write_hdf5(fn, rmin, rmax, nr, zmin, zmax, nz, 
                   Er, Ez, Ephi, desc=None):
        """Write input data to the HDF5 file.

        Parameters
        ----------
        fn : str
            Full path to the HDF5 file.
        rmin : float
            Minimum radial coordinate.
        rmax : float
            Maximum radial coordinate.
        nr : int
            Number of radial grid points.
        zmin : float
            Minimum axial coordinate.
        zmax : float
            Maximum axial coordinate.
        nz : int
            Number of axial grid points.
        Er : ndarray, complex
            Radial electric field, complex evaluated.
        Ez : ndarray, complex
            Axial electric field, complex evaluated.
        Ephi : ndarray, complex
            Toroidal electric field, complex evaluated.

        Returns
        -------
        name : str
            Name, i.e. "<type>_<qid>", of the new input that was written.

        Raises
        ------
        ValueError
            If inputs were not consistent.
        """
        if exyz.shape != (3,) and exyz.shape != (3,1):
            raise ValueError("Exyz has wrong shape.")

        parent = "root"
        group  = "E_TC"
        gname  = ""

        with h5py.File(fn, "a") as f:
            g = add_group(f, parent, group, desc=desc)
            gname = g.name.split("/")[-1]

            g.create_dataset("exyz", (3,1), data=exyz, dtype="f8")

        return gname
