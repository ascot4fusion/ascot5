#!/usr/bin/env python3

"""
This script combines output of HDF5 files.
"""

import sys
import subprocess
import a5py.ascot5io.ascot5tools as tools
import a5py.ascot5io.ascot5      as ascot5

mode = ""
if len(sys.argv) > 1:
    mode = sys.argv[1]

if mode == "add" and len(sys.argv) >= 4:

    targetfile  = sys.argv[2]
    sourcefiles = sys.argv[3:]

    # Check if the target file contains the results group. Copy it from the
    # first source file if not.
    a5 = ascot5.Ascot(targetfile)
    s5 = ascot5.Ascot(sourcefiles[0])
    if not hasattr(a5, "active"):
        subprocess.call(["a5copygroup", sourcefiles[0], targetfile, "results"])
        del sourcefiles[0]
    elif a5["active"] == s5["active"]:
        print("Cannot combine. Target group already contains results with same QID.")
        exit()
    else:
        print("Target file has an active run group. Are results supposed to be")
        print("combined there or to a new run group?")
        while True:
            o = input("(c) Combine to existing one. (m) Make a new group.\n")
            if o == "c":
                break
            elif o == "m":
                subprocess.call(["a5copygroup", sourcefiles[0], targetfile,
                                 "run_" + s5["active"].get_qid()])
                del sourcefiles[0]
                tools.call_ascot5file(targetfile, "set_active", "run_" + s5["active"].get_qid())
                break

    for i in range(len(sourcefiles)):
        print("Combining " + sourcefiles[i] + " to " + targetfile)
        tools.combineoutput(targetfile, addfns=sourcefiles[i])

    print("Combine complete.")

elif mode == "continue" and len(sys.argv) == 4:
    targetfile = sys.argv[2]
    sourcefile = sys.argv[3]

    print("Combining " + sourcefile + " to " + targetfile)
    tools.combineoutput(targetfile, contfns=sourcefile)
    print("Combine complete.")

if mode == "madd" and len(sys.argv) >= 4:

    targetfile  = sys.argv[2]
    sourcefiles = sys.argv[3:]

    for i in range(len(sourcefiles)):
        print("Combining " + sourcefiles[i] + " to " + targetfile)
        qid = ascot5.Ascot(sourcefiles[i]).active.get_qid()
        subprocess.call(["a5copygroup", sourcefiles[i], targetfile,
                         "run_" + qid])

    print("Combine complete.")

else:
    print("Combines output of HDF5 files. Three modes are available.\n")
    print("Add results of a single run split into several files to a single\n"
          + "run in a single file:\n"
          + "a5combine add target.h5 several.h5 files.h5 ...\n")
    print("Add results of a multiple runs, one per file, to a single file:\n"
          + "a5combine madd target.h5 several.h5 files.h5 ...\n")
    print("Combine results of two runs where the second run continued the first"
          + " run (results are gathered to the first run):\n"
          + "a5combine continue firstrun.h5 secondrun.h5\n")
