#!/usr/bin/env python3
import os
import subprocess
import sys
import tempfile

from a5py import Ascot
from a5py.ascot5io.options import Opt

# Parse arguments
remove = False
if "-r" in sys.argv:
    # Remove previous
    sys.argv.remove("-r")
    remove = True

fn = "ascot.h5"
if len(sys.argv) > 1:
    fn = sys.argv[1]

# Open file and read options
a5 = Ascot(fn)
if not "options" in a5.data:
    a5.data.create_input("opt")
    remove = False

options = a5.data.options.active.tostring(descriptions=True)

# Write options to a temporary file for editing
f,tmpfn = tempfile.mkstemp()
f = os.fdopen(f,'w')
f.write(options)
f.close()

# Get default text editor, use -nw for emacs
ed=os.environ.get('EDITOR','vim')
if "emacs" in ed:
    subprocess.call([ed,"-nw",tmpfn])
else:
    subprocess.call([ed,tmpfn])

# Edit done, read options, remove temp file
f = open(tmpfn)
lines = f.readlines()
f.close()
os.remove(tmpfn)
options = Opt.convert_string(lines)

# Write options
desc = input(
    "Give description (leave empty if you don't want to save changes):\n")

if len(desc) == 0:
    print("Options closed without changes.")
else:
    name = a5.data.create_input("opt", activate=False, **options)
    old  = a5.data.options.active.get_name()
    a5.data.options[name].set_desc(desc)
    a5.data.options[name].activate()
    print("New options are now set as active.")

    if remove:
        # Note that remove was set False if these were first options
        a5.data.options[old].destroy()
